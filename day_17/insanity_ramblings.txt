2,4,1,1,7,5,0,3,4,3,1,6,5,5,3,0

BST A ; copy lowest 3, wipes out B
BXL 1 ; toggle lowest bit
CDV B
ADV 3 ; divide A by 8, so discard 3 bits... sus, as it consumes what we took into B!
BXC   ; can flood B with a number > 8
BXL 6 ; toggle bit 3 and 2
OUT B ; output lowest 3 bits
JNZ 0 ; go to start

; to get 2: BXL 6 , B must be 0b100 (4).

000 110
001 111
010 100
011 101
100 010
101 011
110 000
111 001

Pattern deduction:

find the digit. Next time you will see this digit with +1 total digits,
is *7 + count

e.g. first 0 at 7 ? 2 digits with an ending 0 is first at 7 * 7 + 7 = 56.
Three digit ending with 0? 56 * 7 + 56 = 448
predicted next at 3584 - CONFIRMED

does this hold for multi digit? that is, inductively?
First time there is 12: 46. expected next at 368 - CONFIRMED.

0: 00000000000000000000000000000000000000000000000111
1: 00000000000000000000000000000000000000000000111000
2: 00000000000000000000000000000000000000000111000010
3: 00000000000000000000000000000000000000111000010110
4: 00000000000000000000000000000000000111000010110100
5: 00000000000000000000000000000000111000010110100010
6: 00000000000000000000000000000111000010110100010100
7: 00000000000000000000000000111000010110100010100011
8: 00000000000000000000000111000010110100010100011000
9: 00000000000000000000111000010110100010100011000110
10: 00000000000000000111000010110100010100011000110110
11: 00000000000000111000010110100010100011000110110000

from A = 00000000000000111000010110100010100011000110110000
we want the first output to be a '1'

we want OUT B = ???001
we want BXL 6 = ???111
we want BXC to result in ???111...
    This is achieved by B completely different from C in the lower 3 bits.

e.g. 101 for B means 010 for C. 000 on B means 111 on C.

B at this point is:
    BST A, BXL 1
    A at this point is:
        00000000000000111000010110100010100011000110110000
    So B after BST is
        000
    So after BXL 1 is
        001
    So C must be 110
        C is determined by CDV B
        Which is A / (2 ^ B)
        Which is A / 2 ^ 1
        Which is A / 2
        Which is ...110000 & 7 = 0...
    At this stage we need B = 011
    Which we would have if B = 010 before BXL 1
    Which we would have if A = ...010 before BST A.



00000000000000000000000111000010110100010100011000 is first to give 343165530
but
00000000000000000000000111000010110100010100011000
00000000000000000000000111000010110100010100011001
00000000000000000000000111000010110100010100011010
00000000000000000000000111000010110100010100011011
ALSO DO.